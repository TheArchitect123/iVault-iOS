// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections; 
using System.Collections.Generic;
using System.IO;


using AudioToolbox;
using Foundation;
using UIKit;
using CoreGraphics; 


namespace SecurePDF
{
	public partial class VaultController : UITableViewController
	{
		public VaultController(IntPtr handle) : base(handle)
		{
		}

		public AppDelegate appDelegate
		{
			get
			{
				return (AppDelegate)UIApplication.SharedApplication.Delegate;
			}
		}	

		List<string> vaultIcons = new List<string>() {"Note.png", "PDF.png","Photo.png","GeneralDoc.png","Passcode.png","Music.png",};

		List<string> vaultOptions = new List<string>() {
			{"          \t   Notes"},{"          \t   PDFs"},{"          \t   Photos & Videos"},{"          \t   General Documents"},{"          \t   Passwords"}, {"          \t   Music"}
		};

		public override void ViewDidAppear(bool animated)
		{
			this.NavigationController.SetToolbarHidden(true, true);
			this.appDelegate.searchTableSelectPDF = 0;
			this.appDelegate.searchTableSelectWord = 0;
			this.appDelegate.searchTableSelectPhoto = 0;
		}

		private void emailMessage()
		{
			 UIAlertController promptEmail = UIAlertController.Create("Password recovery", "", UIAlertControllerStyle.Alert);

			promptEmail.AddTextField((UITextField obj) =>
			{
				obj.Placeholder = "Email address";
				obj.SpellCheckingType = UITextSpellCheckingType.No;
				obj.AutocorrectionType = UITextAutocorrectionType.No;
				obj.AutocapitalizationType = UITextAutocapitalizationType.None;
				obj.BorderStyle = UITextBorderStyle.RoundedRect;
				obj.KeyboardType = UIKeyboardType.EmailAddress;
				obj.KeyboardAppearance = UIKeyboardAppearance.Alert;
			});

			UIAlertAction confirmed = UIAlertAction.Create("Ok", UIAlertActionStyle.Default, (UIAlertAction obj) =>
			{
				var emailAddress = Environment.GetFolderPath(Environment.SpecialFolder.System);
				var filePath = System.IO.Path.Combine(emailAddress, "emailAddress");
				System.IO.File.WriteAllText(filePath, promptEmail.TextFields[0].Text);
			});

			UIAlertAction denied = UIAlertAction.Create("Maybe Later", UIAlertActionStyle.Destructive, (UIAlertAction obj) =>
			{
				promptEmail.Dispose();
			});

			promptEmail.AddAction(confirmed);
			promptEmail.AddAction(denied);

			if (this.PresentedViewController == null)
			{
				this.PresentViewController(promptEmail, true, null);
			}
			else {
				this.PresentedViewController.DismissViewController(true, () =>
				{
					this.PresentedViewController.Dispose();
					this.PresentViewController(promptEmail, true, null);
				});
			}
		}

		public override void ViewDidLoad()
		{
			if (this.appDelegate.instructionsShared == 0)
			{
				Console.WriteLine("Instructions executed");
				if (UIApplication.SharedApplication.StatusBarHidden == true)
				{
					VaultInstructionsController vaultInstructions = this.Storyboard.InstantiateViewController("VaultInstructionsController") as VaultInstructionsController;

					this.PresentViewController(vaultInstructions, true, null);
				}
				else {
					VaultInstructionsController vaultInstructions = this.Storyboard.InstantiateViewController("VaultInstructionsController") as VaultInstructionsController;

					this.PresentViewController(vaultInstructions, true, null);
				}
			}
			//notes icon
			UIImageView imageNotes = new UIImageView();
			imageNotes.Frame = new CGRect(this.View.Bounds.Left + 5.0f, this.View.Bounds.Top + 10.0f, 80, 80);
			imageNotes.Image = new UIImage(this.vaultIcons[0]);
			this.TableView.AddSubview(imageNotes);

			//pdf icon
			UIImageView imagePDF = new UIImageView();
			imagePDF.Frame = new CGRect(this.View.Bounds.Left + 5.0f, this.View.Bounds.Top + 110.0f, 80, 80);
			imagePDF.Image = new UIImage(this.vaultIcons[1]);
			this.TableView.AddSubview(imagePDF);

			//photos icons
			UIImageView imagePhotos = new UIImageView();
			imagePhotos.Frame = new CGRect(this.View.Bounds.Left + 5.0f, this.View.Bounds.Top + 210.0f, 80, 80);
			imagePhotos.Image = new UIImage(this.vaultIcons[2]);
			this.TableView.AddSubview(imagePhotos);

			//general documents icon
			UIImageView imageGeneral = new UIImageView();
			imageGeneral.Frame = new CGRect(this.View.Bounds.Left + 5.0f, this.View.Bounds.Top + 310.0f, 80, 80);
			imageGeneral.Image = new UIImage(this.vaultIcons[3]);
			this.TableView.AddSubview(imageGeneral);

			//passwords icon
			UIImageView imagePasswords = new UIImageView();
			imagePasswords.Frame = new CGRect(this.View.Bounds.Left + 5.0f, this.View.Bounds.Top + 410.0f, 80, 80);
			imagePasswords.Image = new UIImage(this.vaultIcons[4]);
			this.TableView.AddSubview(imagePasswords);

			//passwords icon
			UIImageView imageMusic = new UIImageView();
			imageMusic.Frame = new CGRect(this.View.Bounds.Left + 5.0f, this.View.Bounds.Top + 510.0f, 80, 80);
			imageMusic.Image = new UIImage(this.vaultIcons[5]);
			this.TableView.AddSubview(imageMusic);


			if(UIDevice.CurrentDevice.UserInterfaceIdiom == UIUserInterfaceIdiom.Phone) {
				this.TableView.RowHeight = 100.0f;	
			}
			else if(UIDevice.CurrentDevice.UserInterfaceIdiom == UIUserInterfaceIdiom.Pad) {
				this.TableView.RowHeight = 150.0f;	
			}
			this.EdgesForExtendedLayout = UIRectEdge.None;
		}


		public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
		{
			UITableViewCell vaultCell = tableView.DequeueReusableCell("Cell");

			if (vaultCell == null)
			{
				vaultCell = new UITableViewCell(UITableViewCellStyle.Value1, "Cell");
			}

			vaultCell.TextLabel.Text = this.vaultOptions[indexPath.Row];
			vaultCell.TextLabel.TextColor = UIColor.Black;

			vaultCell.TextLabel.Font = UIFont.FromName("Avenir-Medium", 22.0f);

			vaultCell.DetailTextLabel.Text = ">";
			vaultCell.DetailTextLabel.TextColor = UIColor.LightGray;
			vaultCell.DetailTextLabel.Font = UIFont.SystemFontOfSize(22.0f, UIFontWeight.Light);
			                                                         
			return vaultCell;
		}

		public override void RowSelected(UITableView tableView, NSIndexPath indexPath)
		{
			switch (indexPath.Row)
			{
				case 0:
					NotesController notes = new NotesController();
					this.NavigationController.PushViewController(notes, true);
					break;

				case 1:
					LibraryControllerTable pdf = new LibraryControllerTable();
					this.NavigationController.PushViewController(pdf, true);
					break;

				case 2:
					PhotosController photo_video = new PhotosController();
					this.NavigationController.PushViewController(photo_video, true);
					break;

				case 3:
					WordController password = new WordController();
					this.NavigationController.PushViewController(password, true);
					break;
				case 4:
					PasswordNotes music = new PasswordNotes();
					this.NavigationController.PushViewController(music, true);
					break;
				default:
					Console.WriteLine("Music controlelr played here");
					break; 
					
			}
			tableView.DeselectRow(indexPath, true);
		}

		public override nint RowsInSection(UITableView tableView, nint section)
		{
			return this.vaultOptions.Count;
		}

	}
}
